# This recipe exercises the use of GIT_ variables in jinja template strings.
# It uses load_setup_py_data from conda_build.jinja_context to populate some fields
# with values fed from setuptools.

{% set data = load_setup_py_data() %}

# package information
package:
  # hard-code name as load_setup_py_data() fails to get package name
  name: "qats"
  # the version string is taken from the most recent tag
  version: {{ data.get('version') }}

# where to fetch the source code
source:
  # use path when building locally (remember to switch off git tag versioning)
  # path: ../
  # clone repository
  git_url: ../
  # and checkout certain revision by tag (if not branch head is used)
  git_tag:

# build specifications
build:
  # PY_VER resolves to the python version used for build
  string: py{{ CONDA_PY }}_{{ PKG_BUILDNUM }}
  # disable including recipe (files in repository) in the final package, only code zipped as .egg
  include_recipe: False
  # Convenient for short build scripts. Use build.sh and bld.bat for more complex builds.
  script: python setup.py install --single-version-externally-managed --record record.txt

# requirements for build and run time
requirements:
  build:
    - python
    - setuptools_scm >=3,<4
    - sphinx >=1,<2
  run:
    - python
    - setuptools_scm >=3,<4
    - matplotlib >=3,<4
    - openpyxl >=2,<3
    - scipy >=1,<2
    - h5py >=2.7,<3
    - pyqt >=5.6.0,<6
    - pandas >=0.24,<1
    - pywin32 # [win]

exclude:
  - menuinst

test:
  commands:
    - python -m unittest
    - qats -h
    - qats app -h
    - qats config -h
    - qats-app -h

about:
  home: {{ data.get('url') }}
  license: {{ data.get('license') }}
  summary: {{ data.get('description') }}
  description: {{ data.get('long_description') }}
  dev_url: {{ data.get('url') }}

extra:
  maintainers:
   - {{ data.get('author') }}